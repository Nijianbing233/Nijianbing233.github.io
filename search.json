[{"title":"Hexo+Github+Netlify博客搭建教程 友情链接+踩坑注意事项","url":"/2025/01/18/Hexo-Github-Netlify%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B-%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5-%E8%B8%A9%E5%9D%91%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/","content":"\n前言最近在编程导航上看到了这篇博客搭建指南。于是着手操作从零开始搭建了一个自己的 Hexo 博客。在过程中，大部分步骤比较顺利，但也踩了一些坑。为了帮助有同样需求的朋友少走弯路，我记录了自己的经验、工具选择以及注意事项，希望对你·有所帮助。\n\n1. 使用 NVM 管理 Node.js 版本在实际项目开发中，Node.js 是不可或缺的工具。为了便于管理多个版本的 Node.js，我推荐使用 **NVM (Node Version Manager)**。它可以快速安装和切换 Node.js 的版本，极大地方便了开发环境的配置。\n参考教程：NVM 安装与使用指南。\n\n2. Git Bash 网络代理问题使用 Git Bash 执行 Git 命令时，可能会遇到网络代理的问题，尤其是在访问 GitHub 时连接速度很慢甚至无法连接。\n解决方案：\n\n配置代理地址。\n参考这篇博客：Git Bash 网络代理配置。\n\n\n3. 个人域名购买与解析个人域名的购买非常简单：\n\n访问域名服务商网站（如阿里云）。\n\n搜索你喜欢的域名，挑选性价比高的直接购买。\n\n购买后，进入解析设置，添加两条解析记录即可完成域名绑定。\n记得一定要添加CNAME文件，每一次提交代码之后GitHub里面的CNAME文件都会被清除。想要持久化保存的话必须要在本地文件夹的source文件夹内添加CNAME文件，先就用记事本，然后把.txt后缀删掉就行，里面是你自己的网站比如wuhu233.site，CNAME不用后缀，把后缀去掉\n\n\n参考：阿里云域名购买指南\n\n4. Hexo 初始化时的命名问题运行 hexo init 时，一定要在命令后面跟上项目名称。例如：\nhexo init my-blog\n\n如果不指定名称，可能会导致初始化失败或报错。\n5. Hexo 主题配置Hexo 提供了丰富的主题供用户选择，主题配置是博客个性化的重要部分。以下是使用主题的步骤：\n\n查找主题访问 Hexo Themes 官方页面 或者 GitHub 搜索自己喜欢的主题。\n\n安装主题进入博客目录的 themes 文件夹，运行以下命令安装主题：\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n修改配置打开博客根目录下的 _config.yml 文件，找到 theme 参数，将其修改为安装的主题名称，例如：\ntheme: next\n\n阅读主题文档每个主题都会附带详细的文档，建议认真阅读文档了解主题的功能和个性化设置。\n\n\n\n提示：如果不需要特别的个性化定制，只需调整 _config.yml 文件中的基础配置即可，节省时间和精力。\n\n\n6. 关于 Netlify 的使用体验(不推荐使用)Netlify 是一款优秀的静态网站托管工具，可以实现自动化部署和免费的 HTTPS 支持。然而，对于数据量较小的个人博客，手动部署往往更加高效。\n手动部署步骤\n在本地完成 Markdown 文件的编辑后，执行以下命令：\nhexo cleanhexo generatehexo deploy\n\n\nhexo clean：清理旧的生成文件。\nhexo generate：生成新的静态页面。\nhexo deploy：将静态页面上传到 GitHub 仓库。\n\n\n提交静态文件到 GitHub 后，即可通过 GitHub Pages 访问你的博客。\n\n\nNetlify 的优缺点\n优点：\n自动化构建和部署，操作简单。\n免费提供 SSL 证书，支持 HTTPS。\n支持定制化域名配置。\n\n\n缺点：\n国内访问速度较慢。\n对于更新频率较低的小型博客，功能显得多余。\n\n\n\n\n建议：如果你的博客更新频繁且需要简化部署流程，推荐使用 Netlify 的自动化功能；否则手动部署更适合日常使用。\n\n\n7. 阅读官方文档的重要性阅读官方文档 是掌握 Hexo 和其他技术的关键。官方文档通常提供以下内容：\n\n快速入门：如何快速搭建基础框架。\n配置说明：详解配置文件的参数及其用途。\n个性化功能：指导用户如何调整样式、功能和插件。\n\n官方文档阅读建议\n充分利用翻译工具如果官方文档没有中文版本，可以使用 沉浸式翻译插件，支持快捷翻译整个页面。常用快捷键：\nCtrl+A：一键翻译。\n\n\n多动手实践仔细阅读 _config.yml 和主题的配置文件，结合文档进行调整，能够快速熟悉 Hexo 的工作原理。\n\n\n提示：搭建博客的过程不仅是技术上的学习，更是对内容表达和个性化创作的一次探索。\n总结经验：\n使用合适的工具：如 NVM、Git Bash 和翻译插件。\n多读文档：官方文档和主题文档是最可靠的参考资料。\n量力而行：根据实际需求选择功能，避免过度定制。\n\n","tags":["Hexo Github Github"]},{"title":"Hello World","url":"/2025/01/18/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"first log","url":"/2025/01/18/first-log/","content":"我的第一篇博客\n在mikey的强烈要求下我还是选择打了一个博客网站\n不过咱说博客肯定是要自己有外露的网站才霸气侧漏，等如果真的写得比较多了就整一个自己的域名反正也不贵哈哈哈\n","tags":["hexo npm github.io"]}]